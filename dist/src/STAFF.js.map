{"version":3,"sources":["../../src/STAFF.js"],"names":["staffItem","item","info","name","age","sex","id","descrip","key","STAFF","allStaff","rawData","staff","sortType","filtType","word","_sortStaff","_filtStaff","newItem","push","_searchStaff","newStaff","filter","forEach","parseInt","sort","item1","item2","indexOf"],"mappings":"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","file":"STAFF.js","sourcesContent":["//每一个人员条目单独作为一个staffItem类\r\nclass staffItem {\r\n    constructor(item){\r\n        this.info = {};\r\n        this.info.name = item.name;\r\n        this.info.age  = item.age || 0;\r\n        this.info.sex  = item.sex;\r\n        this.info.id = item.id;\r\n        this.info.descrip = item.descrip || '';\r\n        this.key = ++staffItem.key;\r\n    }\r\n}\r\n\r\nstaffItem.key = 0;\r\n\r\nexport default class STAFF {\r\n    //创建了2个实例变量，一个是allStaff，其中存储所有staffItem；\r\n    constructor(){\r\n        this.allStaff = [\r\n            new staffItem(STAFF.rawData[0]),\r\n            new staffItem(STAFF.rawData[1]),\r\n            new staffItem(STAFF.rawData[2]),\r\n            new staffItem(STAFF.rawData[3]),\r\n            new staffItem(STAFF.rawData[4]),\r\n            new staffItem(STAFF.rawData[5]),\r\n            new staffItem(STAFF.rawData[6]),\r\n            new staffItem(STAFF.rawData[7]),\r\n            new staffItem(STAFF.rawData[8]),\r\n            new staffItem(STAFF.rawData[9]),\r\n            new staffItem(STAFF.rawData[10]),\r\n        ];\r\n        // 一个是staff，它是最终需要给React展示的数据，是经过用户筛选操作、关键字搜索操作之后得到的人员数组\r\n        this.staff = [];\r\n        this.sortType = 0; //0-身份 1-年龄升 2-年龄降\r\n        this.filtType = 0; //0-all 1-主任 2-老师 3-学生 4-实习\r\n        this.word = ''; //搜索关键字\r\n        this._sortStaff(this.sortType); //默认按身份排序\r\n        this._filtStaff(this.filtType); //默认全部显示\r\n    }\r\n    //增加员工\r\n    addStaffItem(item){\r\n        let newItem = new staffItem(item);\r\n        this.allStaff.push(newItem);\r\n        //员工增加之后进行排序 筛选 搜索过滤\r\n        this._sortStaff(this.sortType);\r\n        this._filtStaff(this.filtType);\r\n        this._searchStaff(this.word);\r\n\r\n        return this;\r\n    }\r\n\r\n    //删除员工\r\n    removeStaffItem(key){\r\n        //返回一个不包含删除key的item数组\r\n        let newStaff = this.allStaff.filter(item => {\r\n            return item.key != key;\r\n        });\r\n        this.allStaff = newStaff;\r\n\r\n        this._filtStaff(this.filtType);\r\n        this._searchStaff(this.word);\r\n        return this;\r\n    }\r\n    //改\r\n    editStaffItem(item){\r\n        this.allStaff.forEach(staffItem => {\r\n            if(staffItem.key == item.key){\r\n                staffItem.info.name     = item.name;\r\n                staffItem.info.sex      = item.sex;\r\n                staffItem.info.age      = item.age;\r\n                staffItem.info.id       = item.id;\r\n                staffItem.info.descrip  = item.descrip;\r\n            }\r\n        });\r\n        this._sortStaff(this.sortType);\r\n        this._filtStaff(this.filtType);\r\n        this._searchStaff(this.word);\r\n        //返回整个STAFF类\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n  //筛选\r\n    _filtStaff(filtType){\r\n        this.filtType = filtType;\r\n        switch (parseInt(filtType)){\r\n            case 0:\r\n                this.staff = this.allStaff;\r\n                break;\r\n            case 1:\r\n                this.staff = this.allStaff.filter(item => {\r\n                    return item.info.id == '主任';\r\n                });\r\n                break;\r\n            case 2:\r\n                this.staff = this.allStaff.filter(item => {\r\n                    return item.info.id == '老师';\r\n                });\r\n                break;\r\n            case 3:\r\n                this.staff = this.allStaff.filter(item => {\r\n                    return item.info.id == '学生';\r\n                });\r\n                break;\r\n            case 4:\r\n                this.staff = this.allStaff.filter(item => {\r\n                    return item.info.id == '实习';\r\n                });\r\n                break;\r\n            default : break;\r\n        }\r\n    }\r\n\r\n  //排序\r\n    _sortStaff(sortType){\r\n        this.sortType = sortType;\r\n        switch (parseInt(sortType)){\r\n            case 0: //身份\r\n                //将字符串id转成整型数便于排序\r\n                this.allStaff.forEach(item => {\r\n                    switch(item.info.id){\r\n                        case '主任':\r\n                            item.info.id = 1; break;\r\n                        case '老师':\r\n                            item.info.id = 2; break;\r\n                        case '学生':\r\n                            item.info.id = 3; break;\r\n                        case '实习':\r\n                            item.info.id = 4; break;\r\n                        default: break;\r\n                    }\r\n                });\r\n                //按照id的大小排序\r\n                this.allStaff.sort(function (item1, item2) {\r\n                   if(item1.info.id < item2.info.id)\r\n                       return -1;\r\n                   else if(item1.info.id > item2.info.id)\r\n                       return 1;\r\n                   else\r\n                       return 0;\r\n                });\r\n                //排序好之后转成字符串\r\n                this.allStaff.forEach(item => {\r\n                    switch(item.info.id){\r\n                        case 1:\r\n                            item.info.id = '主任'; break;\r\n                        case 2:\r\n                            item.info.id = '老师'; break;\r\n                        case 3:\r\n                            item.info.id = '学生'; break;\r\n                        case 4:\r\n                            item.info.id = '实习'; break;\r\n                        default: break;\r\n                    }\r\n                });\r\n                break;\r\n            case 1: //年龄升\r\n                this.allStaff.sort(function (item1,item2) {\r\n                   if(item1.info.age < item2.info.age)\r\n                       return -1;\r\n                   else if(item1.info.age > item2.info.age)\r\n                       return 1;\r\n                   else\r\n                       return 0;\r\n                });\r\n                break;\r\n            case 2: //年龄降\r\n                this.allStaff.sort(function (item1, item2) {\r\n                   if(item1.info.age < item2.info.age)\r\n                       return 1;\r\n                   else if(item1.info.age > item2.info.age)\r\n                       return -1;\r\n                   else\r\n                       return 0;\r\n                });\r\n                break;\r\n            default : break;\r\n        }\r\n    }\r\n\r\n\r\n    //搜索员工\r\n    _searchStaff(word){\r\n        this.word = word;\r\n        //在staff中搜索\r\n        //对数组中的每个元素都执行一次指定的函数（callback），并且创建一个新的数组\r\n        this.staff = this.staff.filter(item => {\r\n            return item.info.name.indexOf(word) != -1 ||\r\n                (item.info.age+'').indexOf(word) != -1 ||\r\n                item.info.id.indexOf(word) != -1 ||\r\n                item.info.sex.indexOf(word) != -1;\r\n        });\r\n    }\r\n\r\n    filtStaff(filtType){\r\n        this._filtStaff(filtType);\r\n        this._searchStaff(this.word);\r\n        return this;\r\n    }\r\n\r\n    sortStaff(sortType){\r\n        this._sortStaff(sortType);\r\n        this._filtStaff(this.filtType);\r\n        this._searchStaff(this.word);\r\n        return this;\r\n    }\r\n\r\n    searchStaff(word){\r\n        this._filtStaff(this.filtType);\r\n        this._searchStaff(word);\r\n        return this;\r\n    }\r\n\r\n}\r\nSTAFF.rawData = [{ descrip:'我是一匹来自远方的狼。', sex: '男', age: 20, name: '张三', id: '主任'},\r\n    { descrip:'我是一匹来自远方的狼。', sex: '女', age: 21, name: '赵静', id: '学生'},\r\n    { descrip:'我是一匹来自远方的狼。', sex: '女', age: 22, name: '王二麻', id: '学生'},\r\n    { descrip:'我是一匹来自远方的狼。', sex: '女', age: 24, name: '李晓婷', id: '实习'},\r\n    { descrip:'我是一匹来自远方的狼。', sex: '男', age: 23, name: '张春田', id: '实习'},\r\n    { descrip:'我是一匹来自远方的狼。', sex: '男', age: 22, name: '刘建国', id: '学生'},\r\n    { descrip:'我是一匹来自远方的狼。', sex: '男', age: 24, name: '张八', id: '主任'},\r\n    { descrip:'我是一匹来自远方的狗。', sex: '男', age: 35, name: '李四', id: '老师'},\r\n    { descrip:'我是一匹来自远方的猪。', sex: '男', age: 42, name: '王五', id: '学生'},\r\n    { descrip:'我是一匹来自远方的牛。', sex: '男', age: 50, name: '赵六', id: '实习'},\r\n    { descrip:'我是一匹来自远方的马。', sex: '男', age: 60, name: '孙七', id: '实习'}];"]}